{"version":3,"sources":["components/hooks.module.css","components/HooksTest.js","components/HocTest.js","components/FormTest.js","components/KFormTest.js","components/Dialog.js","mobx/index.js","components/Tree.js","store/reduxIndex.js","components/ReduxTest.js","store/counter.js","components/ReactRedux.js","store/kredux.js","components/MyReduxTest.js","components/RouterTest.js","saga/user.js","components/UseMemo.js","App.js","serviceWorker.js","saga/saga.js","store/index.js","index.js"],"names":["module","exports","Context","React","createContext","FruitList","props","console","log","fruits","map","fruit","key","onClick","onSetFruit","fruitReducer","state","action","type","payload","FruitAdd","onSetFruits","dispatch","useContext","className","hooks","inputText","onKeyDown","e","target","value","data","title","name","widthContent","Template","id","withLogCom","this","Component","Comp2","NormalLoginForm","handleSubmit","preventDefault","form","validateFields","err","values","getFieldDecorator","onSubmit","Item","rules","required","message","prefix","style","color","placeholder","htmlType","WrappedNormalLoginForm","create","Comp","KFormTest","flag","alert","getFieldDec","callback","Object","keys","options","every","field","validateField","handleChange","setState","bind","some","rule","option","template","cloneElement","onChange","Dialog","node","document","createElement","body","appendChild","removeChild","createPortal","children","Store","unSelected","selected","observable","computed","appState","timer","resetTimer","autorun","setInterval","store","TimerView","observer","onReset","secondsPassed","init","PureComNode","handClick","setSelected","getSelected","TreeNode","toggle","open","newTodoTitle","isFolder","display","child","length","FriendStatus","isOnline","friendID","useState","useEffect","useFriendStatus","Tree","dangerouslySetInnerHTML","__html","onClickCapture","nativeEvent","createStore","number","ReduxTest","subscribe","forceUpdate","getState","asyncAdd","setTimeout","counterReducer","loginout","ReactRedux","connect","counter","add","num","minus","compose","chain","args","reduce","left","right","reducer","enhancer","currentValue","undefined","callbackList","forEach","v","getStore","cb","push","splice","indexOf","middlerwares","midApi","dispath","mw","applyMidderware","MyReduxTest","unSubscribe","ProductList","to","PraviteLogin","isLogin","user","component","path","render","pathname","redirect","location","Detail","match","history","goBack","Login","login","loginSaga","ProductMgt","RouterTest","count","prevProps","prevState","exact","Count","EnhanceComponentA","forwardRef","ref","a","EnhanceComponent","memo","b","App","buttonRef","useRef","setCount","valueA","setValueA","valueB","setValueB","double","useMemo","handClickB","useCallback","current","selectedModel","routeConfig","childRoutes","FormTest","item","index","onEnter","nextState","replaceState","setFruit","useReducer","timeoutId","clearInterval","Provider","UseMemo","routerPage","Boolean","window","hostname","mySaga","UserService","Promise","resolve","reject","put","call","result","takeEvery","mid","createSagaMiddleware","combineReducers","isLoading","error","loading","applyMiddleware","logger","run","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c2dd40d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"hooks_inputText__2mgaK\"};","import React, { useState, useEffect, useReducer, useContext,useCallback } from \"react\";\nimport hooks from \"./hooks.module.css\";\n\nconst Context = React.createContext();\n\nfunction FruitList(props) {\n  console.log(\"子组件\");\n  return (\n    <ul>\n      {props.fruits.map(fruit => (\n        <li\n          key={fruit}\n          onClick={() => {\n            props.onSetFruit(fruit);\n          }}\n        >\n          {fruit}\n        </li>\n      ))}\n    </ul>\n  );\n}\nfunction fruitReducer(state, action) {\n  switch (action.type) {\n    case \"init\":\n      return action.payload;\n    case \"add\":\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\nfunction FruitAdd({ onSetFruits }) {\n  const { dispatch } = useContext(Context);\n  const onAddFruit = e => {\n    if (e.key === \"Enter\") {\n      //  onSetFruits(e.target.value)\n      dispatch({ type: \"add\", payload: e.target.value });\n    }\n  };\n  return (\n    <div>\n      请添加水果:\n      <input type=\"text\" className={hooks.inputText} onKeyDown={onAddFruit} />\n    </div>\n  );\n}\nexport default function HooksTest() {\n  const [fruit, setFruit] = useState(\"\");\n  // const [fruits, setFruits] = useState([]);\n  const [fruits, dispatch] = useReducer(fruitReducer, []);\n  console.log(\"父组件\");\n  useEffect(() => {\n    console.log(\"effect\");\n    let timeoutId = setTimeout(() => {\n      //setFruits([\"苹果\", \"香蕉\", \"芒果\"])\n      dispatch({ type: \"init\", payload: [\"苹果\", \"香蕉\", \"芒果\"] });\n    }, 1000);\n    return () => {\n      console.log(\"返回的值\");\n      clearInterval(timeoutId);\n    };\n  }, [fruit]);\n  useEffect(() => {\n    document.title = fruit;\n  }, [fruit]);\n  function doSomething(){\n    console.log('测试callback')\n  }\n  const memoizedCallback = useCallback(\n  () => {\n    doSomething();\n  },\n  [],\n);\n  return (\n    <Context.Provider value={{fruits,dispatch}}>\n      <div>\n        <FruitAdd\n          onSetFruits={name => {\n            dispatch({ type: \"add\", payload: name });\n          }}\n        ></FruitAdd>\n        <div>{fruit}</div>\n        <FruitList fruits={fruits} onSetFruit={setFruit}></FruitList>\n      </div>\n    </Context.Provider>\n  );\n}\n","import React from 'react'\n\n\nconst data=[\n    {title:'fruit',name:'水果'},\n    {title:'animal',name:'动物'},\n    {title:'people',name:'人类'}\n]\nfunction comp(props){\n    return <div>{props.title}-----{props.name}</div>\n}\n\nconst widthContent=Template=>props=>{\n    return <Template {...data[props.id]}></Template>\n}\nconst withLogCom=function(Template){\n    return class extends React.Component{\n        componentDidMount(){\n            console.log(`已挂载${this.props.id}`)\n        }\n        render(){\n            return <Template {...this.props}/>\n        }\n    }\n}\n\n//创建高阶组件\nconst componentsTem=Template=>prop=>{\n    return <Template {...data[prop.id]}></Template>\n}\nconst FactoryCom=withLogCom(widthContent(comp))\n\n@withLogCom\n@widthContent\nclass Comp2 extends React.Component{\n    render(){\n        return <div>{this.props.title}----{this.props.name}</div>\n    }\n}\nexport default function HocTest() {\n    return (\n        <div>\n            {/* {[0,0,0].map((item,index)=>(<FactoryCom id={index} key={index}></FactoryCom>))} */}\n            {[0,0,0].map((item,index)=>(<Comp2 id={index} key={index}></Comp2>))}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Form, Icon, Input, Button } from \"antd\";\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    // validateFields哪来的？\n    // 全局校验怎么实现的\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  render() {\n    //  getFieldDecorator哪来的?\n    // 做什么的？ 装饰器工厂，字段装饰器能够生成一个装饰器\n    // 设置字段名称、校验规则、增强input使他可以校验\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator(\"userName\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n// 经过包装以后，我们表单拥有了额外能力：全局校验、输入控件包装器\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\n  NormalLoginForm\n);\n\nexport default WrappedNormalLoginForm;","import React, { Component } from 'react'\nimport {Button,Input} from 'antd'\nimport Item from 'antd/lib/list/Item'\n\n\nfunction formCreate(Comp){\n    return class extends React.Component{\n        constructor(props){\n            super(props)\n            this.options={}\n            this.state={}\n            this.getFieldDec=this.getFieldDec.bind(this)\n            this.validateField=this.validateField.bind(this)\n        }\n        validateFields=(callback)=>{\n            const flag= Object.keys(this.options).every(field=>{\n               return  !this.validateField(field)\n            })\n            callback(flag,this.state)\n        }\n        validateField(field){\n            //校验规则的获取\n            const {rules} = this.options[field]\n            //校验规则的值\n            let ret=rules.some(rule=>{\n                if(rule.required){\n                    if(!this.state[field]){\n                        this.setState({[field+'message']:rule.message})\n                        return true\n                    }\n                }\n                this.setState({[field+'message']:''})\n                return false \n            })\n           return ret\n           \n        }\n        handleChange=(e)=>{\n            const {name,value} = e.target\n            this.setState({[name]:value},()=>{\n                this.validateField(name)\n            })\n        }\n        getFieldDec(field,option){\n            this.options[field] = option\n            return template=>{\n                return (<div>\n                  {React.cloneElement(template,{value:this.state[field],name:field||'',onChange:this.handleChange})}\n                <div>{this.state[field+'message']&&(<p style={{color:'red'}}>{this.state[field+'message']}</p>)}</div>\n                </div>)\n            }\n        }\n        render(){\n            return <Comp {...this.props} getFieldDec={this.getFieldDec} validateFields={this.validateFields}></Comp>\n        }\n    }\n}\n@formCreate\nclass KFormTest extends Component {\n\n    validateFields=()=>{\n    this.props.validateFields((flag,data)=>{\n        if(flag){\n            alert('login')\n        }else{\n            alert('fail')\n        }\n      })\n    }\n    render() {\n        const {getFieldDec} = this.props\n        return (\n            <div>\n                {getFieldDec(\"user\",{rules:[{required:true,message:'请输入用户'}]})(<Input type=\"text\"/>)}\n                {getFieldDec(\"password\",{rules:[{required:true,message:'请输入密码'}]})(<Input type=\"password\"/>)}\n                <Button onClick={this.validateFields}>登录</Button> \n            </div>\n        )\n    }\n}\n\nexport default KFormTest","import React, { Component } from 'react'\nimport {createPortal} from 'react-dom'\n\nexport default class Dialog extends Component {\n    constructor(props){\n        super(props)\n        this.node = document.createElement('div')\n        document.body.appendChild(this.node)\n\n    }\n    componentWillUnmount(){\n        document.body.removeChild(this.node)\n    }\n    render() {\n        return (\n            <div>\n                {createPortal(<div>{this.props.children}</div>,this.node)}\n            </div>\n        )\n    }\n}\n","import {observable,computed,action,runInAction,autorun} from 'mobx'\n\n\nexport default class Store{\n    @observable  selected;\n    @observable unSelected;\n\n    constructor(){\n        this.unSelected = 'obj';\n        this.selected = 1\n    }\n    @computed get getSelected(){\n        return this.selected\n    }\n    @action setSelected(value){\n        console.log(this.selected)\n        this.selected++\n    }\n    \n}\n\nvar appState = observable({\n    timer: 0\n});\nappState.resetTimer = action(function reset() {\n    appState.timer = 0;\n});\nautorun(function() {\n    console.log('已改变状态')\n    console.log(appState.timer)\n});\n\nsetInterval(action(function tick() {\n    appState.timer += 1;\n}), 1000);\n\nexport {appState}","import React, { Component, useState, useEffect } from \"react\";\nimport { observable, action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport Store, { appState } from \"../mobx/index.js\";\n\nconst store = new Store();\n\n@observer\nclass TimerView extends React.Component {\n  @observable secondsPassed = 0;\n  componentWillMount() {\n    setInterval(() => {\n      this.secondsPassed++;\n    }, 1000);\n  }\n  @action\n  init=()=>{\n    this.secondsPassed=0\n  }\n  render() {\n    return (\n      <>\n        <button onClick={this.onReset}>\n          Seconds passed: {this.props.appState.timer}\n        </button>\n        <span>Seconds passed: {this.secondsPassed} </span>\n        <button onClick={this.init}>init</button>\n      </>\n    );\n  }\n\n  onReset = () => {\n    this.props.appState.resetTimer();\n  };\n}\n@observer\nclass PureComNode extends Component {\n  constructor(props) {\n    console.log(\"渲染\");\n    super(props);\n    this.state = {};\n  }\n  handClick = () => {\n    store.setSelected(\"test\");\n    // appState\n  };\n\n  render() {\n    return (\n      <div>\n        {store.getSelected}\n        <button onClick={this.handClick}>点击修改mobx</button>\n      </div>\n    );\n  }\n}\n@observer\nclass TreeNode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n  }\n  get isFolder() {\n    return this.props.data.children && this.props.data.children.length > 0;\n  }\n  toggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n  render() {\n    return (\n      <div>\n        <ul>\n          <li>\n            <div onClick={this.toggle}>\n              {this.props.data.title} {this.props.newTodoTitle}\n              {this.isFolder ? <span>{this.state.open ? \"-\" : \"+\"}</span> : \"\"}\n            </div>\n            {this.isFolder ? (\n              <div style={{ display: this.state.open ? \"block\" : \"none\" }}>\n                {this.props.data.children.map((child) => (\n                  <TreeNode data={child} key={child.title}></TreeNode>\n                ))}\n              </div>\n            ) : null}\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\nfunction useFriendStatus(friendID) {\n  const [isOnline, setIsOnline] = useState(friendID);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    console.log(\"订阅\");\n    return () => {\n      console.log(\"取消订阅\");\n    };\n  });\n\n  return isOnline;\n}\nfunction FriendStatus(props) {\n  const isOnline = useFriendStatus(1);\n\n  if (isOnline === null) {\n    return \"Loading...\";\n  }\n  return isOnline ? \"Online\" : \"Offline\";\n}\n@observer\nclass Tree extends Component {\n  @observable newTodoTitle = \"标题\";\n  @observable secondsPassed = 0;\n  constructor(props) {\n    super(props);\n    this.data = {\n      title: \"水果\",\n      children: [\n        {\n          title: \"香蕉\",\n          children: [\n            {\n              title: \"香蕉子\",\n            },\n          ],\n        },\n        {\n          title: \"苹果\",\n          children: [\n            {\n              title: \"苹果籽\",\n            },\n          ],\n        },\n        {\n          title: \"西瓜\",\n        },\n        {\n          title: \"琉璃\",\n          children: [\n            {\n              title: \"琉璃灯\",\n            },\n          ],\n        },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>ceshi</h1>\n          <div dangerouslySetInnerHTML={{ __html: \"<span>abc<span>\" }} />\n          {/* 相当于在div.innerHTML=__html 之所以用用这种方式是为了防止xss攻击(跨站脚本攻击)*/}\n          <div\n            onClickCapture={(e) => {\n              console.log(\"测试捕获\");\n              console.log(e.nativeEvent);\n            }}\n          >\n            {/* nativeEvent原生事件对象 ,e为合成事件对象*/}\n            <div\n              onClickCapture={(e) => {\n                console.log(\"冒泡\");\n                console.log(e.nativeEvent);\n              }}\n            >\n              点击\n            </div>\n          </div>\n          <span>Seconds passed: {this.secondsPassed} </span>\n          <FriendStatus />\n        </div>\n        <TreeNode data={this.data} newTodoTitle={this.newTodoTitle} />\n        <PureComNode />\n        <TimerView appState={appState} />\n      </div>\n    );\n  }\n}\nexport default Tree;\n","import {createStore} from 'redux'\n\n\nconst counterReducer = function(state=0,action){\n    const number = action.payload||1\n    switch(action.type){\n        case 'add':\n            return state+number;\n        case 'minus':\n            return state-1;\n        default:\n            return state;\n    }\n}\nconst store = createStore(counterReducer)\n\nexport default store","import React, { Component } from 'react'\nimport store from \"../store/reduxIndex.js\"\n\nexport default class ReduxTest extends Component {\n    componentDidMount(){\n        store.subscribe(()=>{\n            this.forceUpdate()\n        })\n    }\n    render() {\n        return (\n            <div>\n                {store.getState()}\n                <button onClick={()=>{store.dispatch({type:'add'})}}>加一 </button>\n            </div>\n        )\n    }\n}\n","export const add = num => ({ type: \"add\", payload: num });\nexport const minus = () => ({ type: \"minus\" });\nexport const asyncAdd = () => dispatch => {\n  setTimeout(() => {\n    dispatch({ type: \"add\", payload: 5 });\n  }, 1000);\n};\n\nexport  const counterReducer = function(state=0,action){\n    const number = action.payload||1\n    switch(action.type){\n        case 'add':\n            return state+number;\n        case 'minus':\n            return state-1;\n        default:\n            return state;\n    }\n}\n\nexport const login=()=>({type:'login'});\nexport const loginout=()=>({type:'loginout'})\nexport const loginReducer = function(isLogin=false,action){\n  switch(action.type){\n    case 'login1':\n      return true;\n    case 'loginout':\n      return false;\n    default:\n      return isLogin\n  }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {add,minus,asyncAdd} from \"../store/counter.js\"\n\n\n@connect(state => ({ number: state.counter }), {\n    add,minus,asyncAdd\n})\nclass ReactRedux extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.number}\n        <button\n          onClick={() => {\n            this.props.add(1);\n          }}\n        >\n          加一{\" \"}\n        </button>\n        <button\n          onClick={() => {\n            this.props.add(2);\n          }}\n        >\n          加二{\" \"}\n        </button>\n        <button onClick={this.props.minus}>减一 </button>\n        <button onClick={this.props.asyncAdd}>异步加五 </button>\n      </div>\n    );\n  }\n}\nexport default ReactRedux;\n","export function createStore(reducer, enhancer) {\n  if (enhancer) {\n    return enhancer(createStore)(reducer);\n  }\n  let currentValue = undefined;\n  const callbackList = [];\n\n  function getStore() {\n    return currentValue;\n  }\n  function dispatch(options) {\n    currentValue = reducer(currentValue, options);\n    callbackList.forEach(v => v());\n    return options;\n  }\n  dispatch({ type: \"123\" }); //初始化时调用\n  function subscribe(cb) {\n    callbackList.push(cb);\n    return ()=>{\n      callbackList.splice(callbackList.indexOf(cb),1)\n    }\n  }\n \n\n  return { getStore, dispatch, subscribe };\n}\nexport function applyMidderware(...middlerwares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    const midApi = {\n      getState: store.getState,\n      dispath: (...args) => {\n        dispatch(...args);\n      }\n    };\n    \n    //middlerwares中间件本来就是函数，\n    const chain = middlerwares.map(mw => mw(midApi));\n\n    //中间件格式\n    // function logger({dispatch,store}){\n    //     return dispatch=>action=>{\n    //         console.log(action.type+'任务执行')\n    //         return dispatch(action)\n    //     }\n    // }\n    dispatch = compose(...chain)(store.dispatch); //返回的是一个被中间件加强的dispatch,相当于function(action){}部分\n\n    return {\n      ...store,\n      dispatch\n    };\n  };\n}\n//返回嵌套函数(dispatch)=>{fn3(fn2(fn1(dispatch)))}\nfunction compose(...chain) {\n  if (chain.length === 0) {\n    return args => args;\n  }\n  if (chain.length === 1) {\n    return chain[0];\n  }\n  return chain.reduce((left, right) => (...args) => {\n    console.log(left)  \n    return right(left(...args))});\n}\n","import React, { Component } from \"react\";\nimport { createStore, applyMidderware } from \"../store/kredux\";\nimport { counterReducer, asyncAdd } from \"../store/counter.js\";\n\nconst store = createStore(counterReducer, applyMidderware(logger,logger2,logger3, thunk));\n\nfunction logger({ dispatch, store }) {\n  return dispatch => action => {\n    console.log(action.type + \"任务执行\");\n    return dispatch(action);\n  };\n}\nfunction logger2({ dispatch, store }) {\n  return dispatch => action => {\n    console.log(action.type + \"任务执行2\");\n    return dispatch(action);\n  };\n}\nfunction logger3({ dispatch, store }) {\n  return dispatch => action => {\n    console.log(action.type + \"任务执行2\");\n    return dispatch(action);\n  };\n}\nfunction dispatch(action){\n  return action\n}\n\nfunction thunk({ dispatch, getState }) {\n  return dispatch => action => {\n    if (typeof action == \"function\") {\n      return action(dispatch, getState);\n    }\n    console.log(action.type +'异步执行')\n    return dispatch(action);\n  };\n}\n\nexport default class MyReduxTest extends Component {\n  componentDidMount() {\n    this.unSubscribe= store.subscribe(() => {\n      this.forceUpdate();\n    });\n  }\n  componentWillUnmount(){\n    this.unSubscribe()\n  }\n  render() {\n    return (\n      <div>\n        {store.getStore()}\n        <button\n          onClick={() => {\n            store.dispatch({ type: \"add\" });\n          }}\n        >\n          加一\n        </button>\n        <button\n          onClick={() => {\n            asyncAdd()(store.dispatch);\n          }}\n        >\n          异步加五\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, loginout } from \"../store/counter.js\";\nimport { loginSaga } from \"../saga/user.js\";\n\nimport { observer } from \"mobx-react\";\n\nimport {\n  BrowserRouter,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n  Router,\n} from \"react-router-dom\";\n\n\n// function ProductList() {\n//   return (\n//     <div>\n//       <h3>商品列表</h3>\n//       <Link to=\"/detail/web\">web全栈</Link>\n//     </div>\n//   );\n// }\n@observer \nclass ProductList extends Component {\n  onReset() {\n    this.props.appState.resetTimer();\n  }\n  render() {\n    return (\n      <div>\n        <h3>商品列表</h3>\n        <Link to=\"/detail/web\">web全栈</Link>\n        <button onClick={this.onReset.bind(this)}>\n                Seconds passed: {this.props.appState.timer}\n        </button>\n      </div>\n    );\n  }\n}\n@connect(\n  (state) => ({\n    isLogin: state.user.isLogin,\n  }),\n  { loginout }\n)\nclass PraviteLogin extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n  render() {\n    let { component: Component, path, isLogin, ...args } = this.props;\n    return (\n      <div >\n        <button onClick={this.props.loginout}>注销</button>\n        <Route\n          {...args}\n          render={(props) =>\n            isLogin ? (\n              <Component />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: { redirect: props.location.pathname },\n                }}\n              />\n            )\n          }\n        ></Route>\n      </div>\n    );\n  }\n}\nfunction Detail({ match, history, location }) {\n  return (\n    <div>\n      <h3>详情</h3>\n      <div>\n        <button onClick={history.goBack}>后退</button>\n      </div>\n    </div>\n  );\n}\n@connect(\n  (state) => ({\n    isLogin: state.user.isLogin,\n  }),\n  { login, loginout, loginSaga }\n)\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  handClick = () => {\n    let { history } = this.props;\n    console.log(this.state.name);\n    this.props.loginSaga(this.state.name);\n    // history.push('/management')\n  };\n  render() {\n    return (\n      <div>\n        <div>\n          {this.props.isLogin ? (\n            <Route>\n              {\" \"}\n              <Redirect to=\"/management/book\" />\n            </Route>\n          ) : (\n            \"请先登录\"\n          )}\n        </div>\n        {/* <div >{this.props.isLogin?'已登录':'请先登录'}</div> */}\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            this.setState({ name: e.target.value });\n          }}\n          placeholder=\"请输入\"\n        />\n        <button onClick={this.handClick}>登录</button>\n      </div>\n    );\n  }\n}\n//路由守卫，通过高阶组件包装Route得到一个PrivateRoute\n//为其扩展一个用户状检查功能\n\nfunction ProductMgt() {\n  return (\n    <div>\n      <h3>商品管理</h3>\n      <Link to=\"/management/book\">书籍</Link>\n      <Link to=\"/management/food\">食物</Link>\n      <Route\n        path=\"/management/book\"\n        component={() => {\n          return <div>book</div>;\n        }}\n      />\n      <Route\n        path=\"/management/food\"\n        component={() => {\n          return <div>food</div>;\n        }}\n      />\n      <Redirect to=\"/management/book\" />\n    </div>\n  );\n}\n\nexport default class RouterTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n    console.log(\"初始化\");\n  }\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"更新state\");\n    return state;\n  }\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"快照\");\n    return null;\n  }\n  // componentWillUnmount(){\n  //   console.log('挂载前')\n  // }\n  componentDidMount() {\n    console.log(\"挂载后\");\n  }\n  // componentWillUpdate(){\n  //   console.log('更新前')\n  // }\n  componentDidUpdate() {\n    console.log(\"更新后\");\n  }\n  // componentWillReceiveProps(){\n  //   console.log('属性更新前')\n  // }\n  componentWillUnmount() {\n    console.log(\"销毁\");\n  }\n  shouldComponentUpdate() {\n    console.log(\"是否渲染\");\n    return true;\n  }\n  render() {\n    console.log(\"渲染\");\n    return (\n      <BrowserRouter>\n        <nav>\n          <Link to=\"/\">商品列表</Link>\n          <Link to=\"/management\">商品管理</Link>\n          <Link to=\"/login\">登录</Link>\n        </nav>\n        {/* 路由配置 */}\n        <Switch>\n          <Route exact path=\"/\" component={ProductList} />\n          {/* <Route path=\"/management\" component={ProductMgt} /> */}\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/detail/:name\" component={Detail} />\n          <PraviteLogin path=\"/management\" component={ProductMgt} />\n          <Route component={() => <div>页面不存在</div>} />\n        </Switch>\n        <button\n          onClick={() => {\n            this.setState({ count: this.state.count + 1 });\n          }}\n        >\n          加一\n        </button>\n        <p>{this.state.count}</p>\n        {/* 精确匹配 */}\n        {/* <Route exact path=\"/\" component={ProductList} />\n        <Route path=\"/management\" component={ProductMgt} />\n        <Route path=\"/detail/:name\" component={Detail} /> */}\n      </BrowserRouter>\n    );\n  }\n}\n","export const user = (\n  state = { isLogin: false, isLoading: false, error: \"\" },\n  action\n) => {\n  switch (action.type) {\n    case \"requestLogin\":\n      return { isLogin: false, loading: true, error: \"\" };\n    case \"loginSuccess\":\n      return { isLogin: true, loading:false, error: \"\" };\n    case \"loginFailure\":\n      return { isLogin: false, loading: true, error: action.message };\n    default:\n        return state\n  }\n};\n\nexport function loginSaga(name){\n    return {type:'login',name}\n} ","import React, { useState, useMemo ,useCallback,memo,useRef,forwardRef} from 'react';\n// , PureComponent, memo, useState, useMemo, useCallback\n\nfunction Count(props) {\n  return <div>子组件count值：{props.count}</div>\n}\nfunction ComponentA(props,ref){\n    console.log('重新渲染A')\n    return <div ref={ref} onClick={props.onClick}>{props.a}</div>\n}\nconst EnhanceComponentA = forwardRef(ComponentA)\nfunction ComponentB(props){\n    console.log('重新渲染B')\n    return <div onClick={props.onClick}>{props.b}</div>\n}\nconst EnhanceComponent = memo(ComponentB)\n\nfunction App(props) {\n  const buttonRef = useRef(null)\n  const [count, setCount] = useState(0);\n  const [valueA, setValueA] = useState(1)\n  const [valueB, setValueB] = useState(2)\n  //第一个参数是要执行的函数\n  //第二个参数是执行函数依赖的变量组成的数据\n  //这里只有count发生变化double才会重新计算\n  const double = useMemo(() => {  //\n    return count * 2;\n  }, [count])\n// useCallback是useMemo的变体\n//   useMemo(()=>return fn);\n//   //等价\n//   useCallback(fn);\n  \n  const handClickA = ()=>{\n    setValueA(valueA+1)\n  }\n  //useCallback可以保证在所依赖的state不变的情况下,组件重渲染后，onClick还是上一次渲染的那一个(每次组件重渲染后，onClick都会重新定义).\n  //结合memo,父组件渲染后，当子组件的属性没有变化，将不再触发子组件渲染\n  const handClickB = useCallback(()=>{\n    setValueB(valueB+3)\n    console.log('更新监听函数')\n  },[valueB])\n  return (\n    <div className=\"app\">\n      <p>父组件count值：{count}</p>\n      <Count count={count} />\n      {/* useRef() 和自建一个 {current: ...} 对象的唯一区别是，useRef 会在每次渲染时返回同一个 ref 对象。 */}\n      <button\n        onClick={() => {\n            console.log(buttonRef.current)\n          setCount(count + 1)\n        }}>\n        Add\n     </button>\n      <div>double值：{double}</div>\n      <EnhanceComponentA  ref={buttonRef} a={valueA} onClick={handClickA}/>\n      <EnhanceComponent b={valueB} onClick={handClickB}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport HooksTest from \"./components/HooksTest\";\n// import Button from \"antd/lib/button\";\nimport HocTest from \"./components/HocTest\";\nimport FormTest from \"./components/FormTest\";\nimport KFormTest from \"./components/KFormTest\";\nimport Dialog from \"./components/Dialog\";\nimport Tree from \"./components/Tree\";\nimport ReduxTest from \"./components/ReduxTest\";\nimport ReactRedux from \"./components/ReactRedux\";\nimport MyReduxTest from \"./components/MyReduxTest\";\nimport RouterTest from \"./components/RouterTest\";\nimport UseMemo from \"./components/UseMemo\";\n\nimport selectedModel from \"./mobx/index.js\";\n\n// import { Router } from \"react-router-dom\";\n// import { browserHistory } from 'react-router'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst store = new selectedModel();\n\nconst routeConfig = [\n  {\n    path: \"/\",\n    component: App,\n    childRoutes: [\n      { path: \"about\", component: Dialog },\n      {\n        path: \"inbox\",\n        component: FormTest,\n        childRoutes: [\n          { path: \"HocTest\", component: HocTest },\n          {\n            path: \"KFormTest\",\n            onEnter: function (nextState, replaceState) {\n              replaceState(null, \"KFormTest\");\n            },\n          },\n        ],\n      },\n      { path: \"MyReduxTest\", component: MyReduxTest },\n      { path: \"ReactRedux\", component: ReactRedux },\n      { path: \"ReduxTest\", component: ReduxTest },\n      { path: \"RouterTest\", component: RouterTest },\n      { path: \"HooksTest\", component: HooksTest },\n      { path: \"KFormTest\", component: KFormTest },\n      // { path: \"Tree\", component: Tree },\n      { path: \"UseMemo\", component: UseMemo },\n    ],\n  },\n];\nfunction App() {\n  const childRoutes = routeConfig[0].childRoutes;\n  return (\n    <div className=\"App\">\n      {/* <HooksTest/> */}\n      {/* <HocTest/> */}\n      {/* <FormTest/> */}\n      {/* <KFormTest/> */}\n      {/* <Dialog>something</Dialog> */}\n      {/* <div className=\"App\"> <Button type=\"primary\">Button</Button> </div> */}\n      <Tree store={store}/>\n      {/* <UseMemo/> */}\n      <header>\n        <h1>首页</h1>\n      </header>\n      <section>\n        <Router>\n          <ul>\n            {childRoutes.map((routerPage) => (\n              <li key={routerPage.path}>\n                <Link to={\"/\" + routerPage.path}>{routerPage.path}</Link>\n              </li>\n            ))}\n          </ul>\n          <Switch>\n            {childRoutes.map((routerPage) => (\n              <Route\n                key={routerPage.path}\n                path={\"/\" + routerPage.path}\n                component={routerPage.component}\n              />\n            ))}\n          </Switch>\n        </Router>\n      </section>\n      {/* <ReduxTest/> */}\n      {/* <ReactRedux/> */}\n      {/* <MyReduxTest/> */}\n      {/* <RouterTest /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//call 异步方法 put状态更新，takeEvery监听\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\n//模拟登陆\nexport const UserService = {\n  login(name) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (name === \"wang\") {\n          resolve({ name: \"wang\" });\n        } else {\n          reject({ message: \"登录失败\" });\n        }\n      }, 1000);\n    });\n  }\n};\n//worker saga\nfunction* login(action) {\n  try {\n    yield put({ type: \"requestLogin\" });\n    const result = yield call(UserService.login, action.name);\n    yield put({ type: \"loginSuccess\", result });\n  } catch (error) {\n    yield put({ type: \"loginFailure\", payload: error });\n  }\n}\n//watcher saga\nfunction* mySaga() {\n  yield takeEvery(\"login\", login);\n}\nexport default mySaga;","import {createStore,applyMiddleware,combineReducers} from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport {counterReducer,loginReducer} from './counter.js'\nimport createSagaMiddleware  from 'redux-saga'\nimport mySaga from '../saga/saga.js'\nimport {user} from '../saga/user.js'\n//1.创建saga中间件\nconst mid=createSagaMiddleware();\n\nconst store = createStore(combineReducers({counter:counterReducer,login:loginReducer,user:user}),applyMiddleware(logger,logger2,mid))\nfunction logger2({ dispatch, store }) {\n    return dispatch => action => {\n      console.log(action.type + \"任务执行2\");\n      return dispatch(action);\n    };\n  }\n//2. 执行监听\nmid.run(mySaga)\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store/index.js'\n\n//heml\nReactDOM.render(<Provider store={store}> <App /> </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}